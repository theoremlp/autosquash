name: theoremlp/autosquash action
description: Enable automatic squash commits on PRs
branding:
  icon: git-merge
  color: blue

inputs:
  github-token:
    description: the GitHub token to use to change the PR state
    required: true
  pull-request-number:
    description: the number of the target pull request
    required: true
  squash-commit-title:
    description: the text to use as the squash commit title
    required: true
  squash-commit-message:
    description: the text to use as the squash commit message
    required: true
  required-label:
    description: require this label in order to enable automerge
    required: false
  do-not-merge-label:
    description: require that this label is not present to enable automerge
    required: false
  ignore-author:
    description: do not enable autosquash for this commit author
    required: false

runs:
  using: composite
  steps:
    - name: Enable Automatic Squash Commit
      shell: bash
      run: |
        # autosquash bash script

        function pr_has_label {
          if [[ -n "$(gh pr view --json labels --jq "select(.labels[].name | contains(\"$1\"))" "${{ inputs.pull-request-number }}")" ]]
          then
            echo "true"
          else
            echo "false"
          fi
        }

        if [[ -n "${{ inputs.ignore-author }}" ]]
        then
          if [[ "$(gh pr view --json author --jq ".author.login | contains(\"${{ inputs.ignore-author }}\")" "${{ inputs.pull-request-number }}")" == "true" ]]
          then
            echo "Skipping because PR author is in the ignore list."
            exit 0
          fi
        fi

        if [[ "$(gh pr view --json isDraft --jq '.isDraft' "${{ inputs.pull-request-number }}")" == "true" ]]
        then
          echo "Skipping because the PR is in a draft state."
          exit 0
        fi

        export ENABLE="none"
        if [[ -n "${{ inputs.required-label }}" ]]
        then
          export ENABLE="$(pr_has_label '${{ inputs.required-label }}')"
        else
          export ENABLE="true"
        fi

        if [[ -n "${{ inputs.do-not-merge-label }}" ]]
        then
          if [[ "$(pr_has_label '${{ inputs.do-not-merge-label }}')" == "true" ]]
          then
            echo "Disabling autosquash due to presence of do not merge label"
            export ENABLE="false"
          fi
        fi

        PR_ID="$(gh pr view --json id ${{ inputs.pull-request-number }})"

        if [[ "$ENABLE" == "true" ]]
        then
          echo "Enabling autosquash on PR"
          echo "Title: $SQUASH_COMMIT_TITLE"
          echo "Message:"
          echo "$SQUASH_COMMIT_MESSAGE"
          gh api graphql -f query="mutation PullRequestAutoMerge {
            enablePullRequestAutoMerge(input: {
              pullRequestId: \"$PR_ID\",
              commitHeadline: \"$SQUASH_COMMIT_TITLE\",
              commitBody: \"$SQUASH_COMMIT_MESSAGE\",
              mergeMethod: SQUASH
              })
              {clientMutationId}
            }"
        else
          echo "Disabling autosquash on PR"
          gh api graphql -f query="mutation DisablePullRequestAutoMerge {
            disablePullRequestAutoMerge(input: {
              pullRequestId: \"$PR_ID\",
            })
            {clientMutationId}
          }"
        fi
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        SQUASH_COMMIT_TITLE: ${{ inputs.squash-commit-title }}
        SQUASH_COMMIT_MESSAGE: ${{ inputs.squash-commit-message }}
